#first_name = "bro"
#last_name = "shakil"
#full_name = first_name+ " " + last_name
#print("hello "+full_name)

# age= 28
# age += 1
# print("your age is: "+ str(age))
# print(type(age))

# height= 250.5
# print("your height is:"+ str(height) +"cm")
# print(type(height))
# human = True
# print("are you a human: " + str(human))
#print(type(human))
# name = "shakil"
# age = 27
# attractive = True
#name = "Shakil Reza"
# #print(len(name))
# print(name.capitalize())
# print(name.upper())
# print(name.lower())
#print(name.isdigit())
#print(name.isalnum())
#print(name.capitalize())
#print(name.isalpha())
#print(name.count("a"))
# print(name.replace("a","o"))
# print(name*4)
#type casting= convert a data type of value into another type of data type

# x=1 #int
# y=2.0 #float
# z= "3"
#
# print("x is: "+str(x))
# print("y is: "+str(y))
# print(z*3)
##user input/str to int,str to float
# name = input("what is your name?: ")
# age =float(input("how old are you?: "))
# height =input(" how tall are you(in feet and inches)?: ")
# age = age + 1
# print( "Hello, "+name)
# print("you are "+ str(age)+ "years old")
# print("you r "+ str(height)+ "tall")

#math function/import math
import math
#pi=3.24
#print(round(pi)) ##print(round(pi,2)) output 3.24/ 2= 2decimal
#This line prints the rounded value of pi using the round() function, which is a built-in function in Python. The round() function takes a number as an argument and rounds it to the nearest integer.

#In this case, pi is equal to 3.24, which is already a decimal value. The round() function takes this value and rounds it to the nearest integer, which is 3. Therefore, the output of this code is:

#print(math.ceil(pi)) ##The ceil() function can be useful in many applications, such as rounding up to the nearest whole number or finding the next highest multiple of a number.
#print(math.floor(pi))
#print(abs(pi))

#print(math.floor(pi)) is correct because math.floor() is a valid function in Python's math module that rounds a number down to the nearest integer.
##On the other hand, math.abs() is not a valid function in Python's math module. Instead, the correct function to get the absolute value of a number in Python is abs(), which is a built-in function and does not require importing any module.

#print(pow(pi,2))
#print(math.sqrt(420))
# x= 1
# y= 2
# z= 3
#print(max(x,y,z))
#print(min(x,y,z))

#26/03/23
##slicing = create a substring by extracting elements from another string
#     indexing[] or slice()
#     [start:stop:step]
#index string
# name = "gaming potatochips!"
# #print(len(name))
# first_name = name[:3]
# last_name= name[-12:]
#
# random_name = name[0:15:2]
# reversed_name = name[::-1]
# print(reversed_name)

##slice
# website1 = "http://google.com"
# website2= "http://wikipdedia.com"
#
# slice = slice(7,-4)
# print(website2[slice])


##if statement= a block of code,that will excute if it`s
# condition is true

# age = int(input("how old are you?: "))
# if age == 100:
#     print("You are a century old")
# elif age >= 18:
#     print("You are an adult!")
# elif age <0:
#     print("You aren`t even born yet!")
#else:
#     print("You are a underage!")
##if statement er nicer indent soho jesob code ache
#     segulake block of code bole



##logical operator (and,or,not) = used to check if 2 or more conditional operator is true
## not operator work`s lil bit difrently

# temp = int(input("What is the temperature outside?: "))
# if not(temp >=0 and temp <=30):
#     print("Today isn`t ideal weather!")
#     print("Stay at house!")
#
# elif not(temp <=0 or temp >=30):
#     print("The temperature is good!")
#     print("let`s go outside")

##While loop= unlimited = a ekta statement ja ekta code blcok re excute
#     kortei thakbo jotokkhon etar condition true thakbe
# name = None
#                  #same way   #name=""
# while not name:  #while len(name)==0:
#     name = input("Enter your name!: ")
# print("Hello "+name)


##contdown timer ==>
import time
##for loops = limited = a statement that will excute
#                  it`s block of code a limited times
#for loop er benifit holo eta diye je kono kisui repeat kora jay
# for i in range(10+1):
#     print(i+1)
# for i in range(50,100+1,2):
#     print(i)
# for i in "Shakil reza":
#     print(i)
##timer
# for seconds in range(10,0,-1):
#     print(seconds)
#     time.sleep(1)
# print("Happy new year!")


##NESTED LOOPS = The "iner loop" will finish all of it`s
#    iteration before finishing 1 of the "outer loop"
#rectangle==>

#inner for loop
# rows = int(input("how many rows?: "))
# columns = int(input("how many columns?: "))
# symbol = input("Enter a symbol to use?: ")
#
# for i in range(rows):
#     for j in range(columns):
#         print(symbol, end="") #end="" stops moving down
#     print()

## Loop control statement = change a loops excution
#   from it`s normal sequence
# Break =    used to terminate the loop entirely
# Continue = skips to the next iteration of the loops.
# Pass =   does nothing, acts as a placeholder
#break
# while True:
#     name = input("Enter your name!")
#     if name != "":
#         break
# phone_number ="123-446-563"
# for i in phone_number:
#     if i == "-":
#         continue
#
#     print(i, end="")

#     pass, ex. 1,20 porjonto
# for i in range(1,21):
#
#     if i == 13:
#         pass
#     else:
#         print(i)

##2D list = a list of lists(multi dimensional list)

# drinks = ["coffe", "soda" , "tea"]
# dinner = ["pizza","hamburger","hotdog"]
# dessert = ["cake","ice cream"]
#
# food = [drinks,dinner,dessert]
# print(food[1][2]) #~je kono 1ta elm acces korte hoile 2D set list use korte hobe


##tuple = collection which is ordered and unchangable
#         ek rokom data eksthe korar jonno use kora hoy
# same like list,except tuple is ordered and unchangable
# student = ("bro","27","male")
#
# print(student.count("bro"))   #checking value
#print(student.index("male"))  #certain value er index ber kora

#for x in student:   #for loop diye sobgula value dekha jabe
#    print(x)
#(if) certain value amader tuple a ache kina setao check kora jay

# if "bro" in student:
#     print("My G! what`s up?")


### set = collection which is unordered, unindexed, no duplicate values
# set create korte hole sobgula value ke 3rd bracket/ {}
#  diye


#utenils = {"fork", "spoon","knife"}
#utenils2 = {"fork", "spoon","knife","knife","knife"} # etar result a
#  knife 1bari asbe set er karone
#dishes = {"bowl", "plate", "cup","knife"}
#set function:
# utenils.add("napkin")
# utenils.remove("spoon")
# utenils.clear()
#utenils.update(dishes)
#dinner_table = utenils.union(dishes)
#print(utenils.difference(dishes)) #2 set er simillarity, difference dekha jay
#print(utenils.intersection(dishes))
#value gulake jodi display kori taile list er moto ordered hobe na
#kono value bracket moddhe ache kina oita list er set a faster check kora jay

#for x in dinner_table:
#    print(x)


#dictionary = A changable, unordered collection of unique key: values pairs
#            fast because they use hassing, allow us to access a value quickly

capitals = {'USA': 'Washington DC',
            'India': 'New Dehili',
            'China': ' beijing',
            'Russia': 'Moscow'}     #no of index use korar bodole amra key:value use korte pari

print(capitals['Russia'])

